What are aggregate functions?

Perform a calculation on data within a column and return one result.

SELECT COUNT(*) from customers;
SELECT COUNT(last_name) from customers;

SELECT * from customers where first_name IS NULL;

SELECT SUM(no_seats) from rooms;

SELECT SUM(no_seats) from rooms where id>3;

SELECT *  from rooms;
SELECT *  from seats;
SELECT *  from films;

SELECT MAX(length_min) from films;
SELECT MIN(length_min) from films;
SELECT AVG(length_min) from films;

SELECT AVG(length_min) from films where length_min>120;

SELECT COUNT(*) from bookings;
SELECT COUNT(distinct(customer_id)) from bookings;

SELECT customer_id, screening_id, count(id) from bookings 
GROUP BY customer_id, screening_id
HAVING count(id)>1


//////////////////
Sub Queries
////////////////
Non Correlated
Correlated
/////////////


SELECT id,start_time from screenings
where film_id IN(
    SELECT id from films where length_min>120
)

///
Non Correlated
> The inner Query can run independently of the outer query
SELECT id,start_time from screenings
where film_id IN(
    SELECT id from films where length_min>120
)

///
Correlated
> The inner query cannot run independently of the outer query

SELECT screening_id,customer_id,
(
    SELECT count(seat_id) from reserved_seat where booking_id = b.id
)
from booking b

SELECT CONCAT(first_name,' ',last_name) AS full_name from customers;

SELECT CONCAT("Hi ",first_name,"_",last_name," Your Email Id is ",email) As details from customers;

SELECT name, substring(name,1,3) As short_name from films;
SELECT name, substring(name,2,6) As short_name from films;
SELECT name, substring(name,2) As short_name from films;

SELECT name, Upper(name) As cap_name from films;
SELECT * from screenings;
SELECT start_time from screenings;
SELECT start_time,Date(start_time) from screenings;
SELECT start_time,Date(start_time),Month(start_time) from screenings;

SELECT * from screenings where DATE(start_time)='2017-10-04';

SELECT * from screenings where DATE(start_time) between '2017-10-03' AND '2017-10-04';


/////
Locks
///////
SHOW open tables

SHOW open tables;

LOCK table films write;
UNLOCK TABLES;

LOCK table films write, rooms read;

select * from rooms;

show open tables where in_use>0;